apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.11"
}

tasks.withType(Test).configureEach {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

project.afterEvaluate {
    tasks.register("jacocoTestReport", JacocoReport) {
        dependsOn("testDebugUnitTest")

        reports {
            xml.required.set(true)
            html.required.set(true)
            html.outputLocation.set(layout.buildDirectory.dir("reports/jacoco/html"))
        }

        def fileFilter = [
                '**/R.class', '**/R$*.class', '**/BuildConfig.*',
                '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*'
        ]

        def debugTree = fileTree(
                dir: "$buildDir/tmp/kotlin-classes/debug",
                excludes: fileFilter
        )

        sourceDirectories.setFrom(files([
                "$projectDir/src/main/java",
                "$projectDir/src/main/kotlin"
        ]))

        classDirectories.setFrom(files([debugTree]))
        executionData.setFrom(fileTree(buildDir).include(
                "outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec",
                "jacoco/testDebugUnitTest.exec"
        ))
    }
}
